В файле some_file.txt записан текст.
Проанализируйте этот текст и запишите в файл result.txt:
кол-во слов, начинающихся с заглавной буквы
кол-во цифр в тексте (с учетом повторов)
кол-во строк
кол-во гласных букв, использующихся в тексте (без повторов)
слова в которых встречаются гласные, в порядке уменьшения кол-ва гласных букв в них
(если кол-во букв одинаковое, то порядок не меняется)

Примечания
В задаче ничего не вводится с клавиатуры и ничего не выводится в консоль,
все действия производятся с файлами. В примерах показано их содержимое.


Пример:
Ввод:
Фильм существует в семи версиях
из которых базовыми считаются две
оригинальная версия с хэппи-эндом 1982
которая была плохо принята кинокритиками и провалилась в прокате
и так называемая режиссёрская версия с открытым финалом 1992
которая согласно опросу шестидесяти учёных проведённому одной британской газетой
была признана лучшим научно-фантастическим фильмом в истории

Вывод:
1 # кол-во слов, начинающихся с заглавной буквы

8 # кол-во цифр в тексте (с учетом повторов)

7 # кол-во строк

10 # кол-во гласных букв, использующихся в тексте (без повторов)

научно-фантастическим кинокритиками называемая режиссёрская шестидесяти существует оригинальная проведённому базовыми
хэппи-эндом провалилась версиях считаются которая истории которых версия которая принята прокате версия открытым финалом
согласно опросу учёных одной британской газетой признана семи была плохо была лучшим фильмом Фильм из две и и так

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


В файле some_file.txt записано условие с переменной x.
В файле other_file.txt записано число 1.0 и некоторое
кол-во вещественных чисел,
каждое с новой строки. Нужно перемножать числа второго
файла подходящие
под условие отбора (если подставить число в условие вместо
переменной x)
до тех пор, пока произведение больше единицы.
Если в какой-то момент произведение стало меньше единицы,
то в файл result.txt
нужно записать номер строки из файла other_file.txt в котором
записан последний
множитель (нумерация начинается с 0).
Если же такого не произошло и произведение всех чисел больше
единицы,
то в файл result.txt нужно записать текст: "Произведение больше 1".

Пример:
x % 1 >= 0.5
Пример:
x % 1 >= 0.5
_________________________________
1.0
7.5
0.7
75.3
0.01
15.3
51.91

Вывод:
Произведение больше 1
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Напишите функцию words_analyser(), которая принимает неограниченное
количество аргументов и именованный аргумент real (который по умолчанию равен -1).
Функция должна возвращать список чисел, которые больше аргумента real.
Если в функцию переданы любые аргументы, кроме целых чисел, то возбуждается
исключение IHaveSomethingWeird с сообщением 'Мне нужны только целые числа!'.
Если все числа меньше 1, то возбуждается исключение TooEasyForMe с сообщением
'Даже смотреть на них не буду.'.
Если в функцию не передано ни одного аргумента, или возвращаемый список
пуст - то возбуждается исключение INeedAtLeastSomething с сообщением
'Тратить время впустую я не буду.'.



Пример 1:
Ввод:
nums = [5, 10, 15, 12]
num = 5
answer = words_analyser(nums, real=num)
print(answer)

Вывод:
[10, 15, 12]

Пример 2:
Ввод:
nums = []
answer = words_analyser(nums)
print(answer)

Вывод:
raise INeedAtLeastSomething('Тратить время впустую я не буду.')
main.INeedAtLeastSomething: Тратить время впустую я не буду.

Пример 3:
Ввод:
nums = [-5, 18, 42, -111051]
num = 50
answer = words_analyser(nums, real=num)
print(answer)

Вывод:
raise TooEasyForMe('Даже смотреть на них не буду.')
main.TooEasyForMe: Даже смотреть на них не буду.
